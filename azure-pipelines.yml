trigger:
- master

pool:
  vmImage: ubuntu-latest
  name: default


variables:
  majorVersion: '1'
  minorVersion: '0'
  artifactVersion: ''
  sourceBranch: 'master'

steps:
- checkout: self
  clean: true


# - task: SonarQubePrepare@5
  # inputs:
    # SonarQube: 'azure_devops_pipeline_connection_master'
    # scannerMode: 'MSBuild'
    # projectKey: 'azure_devops_pipeline_azure_devops_pipeline_a8ba4cd5-8197-48c3-bcce-45500f7bf955'

# Dotnet build task
- script: dotnet build
  displayName: 'build the artifact'


# # Run Code Analysis task
# - task: SonarQubeAnalyze@5
  # inputs:
    # jdkversion: 'JAVA_HOME'
# 
# # Publish Quality Gate Result task
# - task: SonarQubePublish@5
  # inputs:
    # pollingTimeoutSec: '300'

- script: |
    new_version="$(majorVersion).$(minorVersion).$(Build.Buildid)"
    echo "##vso[task.setvariable variable=artifactVersion;]$new_version"
  displayName: 'Increment Version (Bash)'

- script: echo "Version number is $(artifactVersion)"
  displayName: 'Display version number'

- task: artifactstagger@1
  inputs:
    EndpointType: 'integrated'
    StageNameTag: false
    CustomTags: '$(sourceBranch)_$(artifactVersion)'
  displayName: 'tag the Buildid'

- script: dotnet pack -p Version=$(artifactVersion)
  displayName: 'Create NuGet Package'

- script: dotnet nuget push --source "artifacts" --api-key az $(System.DefaultWorkingDirectory)/HelloWorldApp/bin/Release/HelloWorldApp.$(artifactVersion).nupkg
  displayName: 'publish NuGet Package'


